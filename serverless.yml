service:
  name: kaskadi-request-amz-stock-update-lambda

package:
  individually: true
  exclude:
    - '**/**'

provider:
  name: aws
  runtime: nodejs12.x
  stackName: ${self:service.name}-stack
  stage: ${opt:stage, 'prod'}
  region: eu-central-1
  deploymentBucket:
    name: kaskadi-serverless-deployment-bucket
  apiGateway:
    restApiId: !ImportValue KaskadiStocksRestAPIGatewayId
    restApiRootResourceId: !ImportValue KaskadiStocksRestAPIGatewayRootResourceId
  tags:
    app: kaskadi
    service: ${self:service.name}
    logical-unit: stocks
    type: schedule, http

layers:
  KaskadiRequestAmzStockUpdateLayer:
    path: layer
    name: ${self:service.name}-layer
    description: Layer for ${self:service.name}
    compatibleRuntimes:
      - nodejs10.x
      - nodejs12.x
    licenseInfo: MIT
    package:
      include:
        - '**/**'

functions:
  KaskadiRequestAmzStockUpdate:
    handler: kaskadi-request-amz-stock-update-lambda.handler
    name: ${self:service.name}
    layers:
      - { Ref: KaskadiRequestAmzStockUpdateLayerLambdaLayer }
    package:
      include:
        - 'kaskadi-request-amz-stock-update-lambda.js'
    events:
      - http:
          method: get
          path: amz/request-update
          cors: true
      - schedule:
          rate: cron(0 7 ? * * *) # runs every day at 7:00AM
          enabled: true
